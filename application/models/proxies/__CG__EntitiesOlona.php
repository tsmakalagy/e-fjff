<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Olona extends \Entities\Olona implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getAnarana()
    {
        $this->__load();
        return parent::getAnarana();
    }

    public function setAnarana($anarana)
    {
        $this->__load();
        return parent::setAnarana($anarana);
    }

    public function getFanampiny()
    {
        $this->__load();
        return parent::getFanampiny();
    }

    public function setFanampiny($fanampiny)
    {
        $this->__load();
        return parent::setFanampiny($fanampiny);
    }

    public function getDatenaissance()
    {
        $this->__load();
        return parent::getDatenaissance();
    }

    public function setDatenaissance($datenaissance)
    {
        $this->__load();
        return parent::setDatenaissance($datenaissance);
    }

    public function getVelona()
    {
        $this->__load();
        return parent::getVelona();
    }

    public function setVelona($velona)
    {
        $this->__load();
        return parent::setVelona($velona);
    }

    public function getKarapokotany()
    {
        $this->__load();
        return parent::getKarapokotany();
    }

    public function setKarapokotany($karapokotany)
    {
        $this->__load();
        return parent::setKarapokotany($karapokotany);
    }

    public function getCin()
    {
        $this->__load();
        return parent::getCin();
    }

    public function setCin($cin)
    {
        $this->__load();
        return parent::setCin($cin);
    }

    public function getSex()
    {
        $this->__load();
        return parent::getSex();
    }

    public function setSex($sex)
    {
        $this->__load();
        return parent::setSex($sex);
    }

    public function getDatecin()
    {
        $this->__load();
        return parent::getDatecin();
    }

    public function setDatecin($datecin)
    {
        $this->__load();
        return parent::setDatecin($datecin);
    }

    public function getAndraikitra()
    {
        $this->__load();
        return parent::getAndraikitra();
    }

    public function setAndraikitra($andraikitra)
    {
        $this->__load();
        return parent::setAndraikitra($andraikitra);
    }

    public function getAsa()
    {
        $this->__load();
        return parent::getAsa();
    }

    public function setAsa($asa)
    {
        $this->__load();
        return parent::setAsa($asa);
    }

    public function getSpouse()
    {
        $this->__load();
        return parent::getSpouse();
    }

    public function setSpouse(\Entities\Olona $spouse)
    {
        $this->__load();
        return parent::setSpouse($spouse);
    }

    public function getParents()
    {
        $this->__load();
        return parent::getParents();
    }

    public function addParent(\Entities\Olona $parent)
    {
        $this->__load();
        return parent::addParent($parent);
    }

    public function addParents(\Doctrine\Common\Collections\ArrayCollection $parents)
    {
        $this->__load();
        return parent::addParents($parents);
    }

    public function removeParents(\Doctrine\Common\Collections\ArrayCollection $parents)
    {
        $this->__load();
        return parent::removeParents($parents);
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function addChild(\Entities\Olona $child)
    {
        $this->__load();
        return parent::addChild($child);
    }

    public function addChildren(\Doctrine\Common\Collections\ArrayCollection $children)
    {
        $this->__load();
        return parent::addChildren($children);
    }

    public function removeChildren(\Doctrine\Common\Collections\ArrayCollection $children)
    {
        $this->__load();
        return parent::removeChildren($children);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'anarana', 'fanampiny', 'datenaissance', 'velona', 'cin', 'sex', 'datecin', 'asa', 'karapokotany', 'andraikitra', 'spouse', 'parents', 'children');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}